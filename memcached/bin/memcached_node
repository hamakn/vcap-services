#!/usr/bin/env ruby
# -*- mode: ruby -*-
# Copyright (c) 2009-2011 VMware, Inc.

ENV["BUNDLE_GEMFILE"] ||= File.expand_path("../../Gemfile", __FILE__)

$LOAD_PATH.unshift File.join(File.dirname(__FILE__), '..', '..', 'base', 'lib')
require 'base/node_bin'

$LOAD_PATH.unshift(File.expand_path("../../lib", __FILE__))
require "memcached_service/memcached_node"

class VCAP::Services::Memcached::NodeBin < VCAP::Services::Base::NodeBin

  def node_class
    VCAP::Services::Memcached::Node
  end

  def default_config_file
    config_base_dir = ENV["CLOUD_FOUNDRY_CONFIG_PATH"] || File.join(File.dirname(__FILE__), '..', 'config')
    File.join(config_base_dir, 'memcached_node.yml')
  end

  def additional_config(options, config)
    #options[:redis_server_path] = parse_property(config, "redis_server_path", String)
    options[:memcached_server_path] = parse_property(config, "memcached_server_path", String)
    #options[:config_template] = File.expand_path("../../resources/redis.conf.erb", __FILE__)
    options[:port_range] = parse_property(config, "port_range", Range)
    options[:available_memory] = parse_property(config, "available_memory", Integer)
    options[:max_memory] = parse_property(config, "max_memory", Integer)
    #options[:max_swap] = parse_property(config, "max_swap", Integer)
    #options[:redis_log_dir] = parse_property(config, "redis_log_dir", String)
    options[:memcached_log_dir] = parse_property(config, "memcached_log_dir", String)
    options[:command_rename_prefix] = parse_property(config, "command_rename_prefix", String)
    options[:max_clients] = parse_property(config, "max_clients", Integer, :optional => true)
    options
  end

end

VCAP::Services::Memcached::NodeBin.new.start
